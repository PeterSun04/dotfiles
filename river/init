#!/bin/sh


# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

riverctl spawn "dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
riverctl spawn "systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river"
riverctl spawn "killall waybar"
riverctl spawn "killall way-displays"
#riverctl spawn "killall dunst"
#riverctl spawn "killall easyeffects"
riverctl spawn "killall hypridle"
#riverctl spawn "killall fcitx5"


riverctl spawn hyprpaper
riverctl spawn fcitx5
riverctl spawn "easyeffects --gapplication-service"
riverctl spawn hypridle
riverctl spawn dunst
riverctl spawn waybar

riverctl spawn "wideriver --inner-gaps 6 --outer-gaps 6 --layout left --stack even --smart-gaps --border-width 3 --border-color-focused 0xcba6f7 --border-color-unfocused 0x1e1e2e --ratio-master 0.55 --count-master 1"
riverctl rule-add -app-id firefox ssd
riverctl rule-add -app-id librewolf ssd
riverctl rule-add -app-id com.github.wwmm.easyeffects ssd



# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Alt+Shift Return spawn foot
riverctl map normal Alt P spawn "wmenu-run -n cdd6f4 -N 1e1e2e -m f38ba8 -M 1e1e2e -s f9e2af -S 1e1e2e"
riverctl map normal Alt+Shift R spawn "/home/liz/.config/river/init"
# Super+Q to close the focused view
riverctl map normal Alt+Shift C close

# Super+Shift+E to exit river
riverctl map normal Alt+Shift Q exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Alt J focus-view next
riverctl map normal Alt K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Alt Period focus-output next
riverctl map normal Alt Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Alt+Shift Period send-to-output next
riverctl map normal Alt+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Alt Return zoom

riverctl map normal Alt H send-layout-cmd wideriver "--ratio -0.05"
riverctl map normal Alt L send-layout-cmd wideriver "--ratio +0.05"

riverctl map normal Alt I send-layout-cmd wideriver "--count +1"
riverctl map normal Alt D send-layout-cmd wideriver "--count -1"

# Super+Alt+{H,J,K,L} to move views
#riverctl map normal Super+Alt H move left 100
#riverctl map normal Super+Alt J move down 100
#riverctl map normal Super+Alt K move up 100
#riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal Super+Alt+Control H snap left
#riverctl map normal Super+Alt+Control J snap down
#riverctl map normal Super+Alt+Control K snap up
#riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
#riverctl map normal Super+Alt+Shift H resize horizontal -100
#riverctl map normal Super+Alt+Shift J resize vertical 100
#riverctl map normal Super+Alt+Shift K resize vertical -100
#riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
#riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Alt $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Alt+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Alt+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Alt+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Alt 0 set-focused-tags $all_tags
riverctl map normal Alt+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Alt Space toggle-float
riverctl map float Alt Space toggle-float

riverctl map normal Alt M send-layout-cmd wideriver "--layout monocle"
riverctl map normal Super Up    send-layout-cmd wideriver "--layout top"
riverctl map normal Super Right send-layout-cmd wideriver "--layout right"
riverctl map normal Super Down  send-layout-cmd wideriver "--layout bottom"
riverctl map normal Alt T  send-layout-cmd wideriver "--layout left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ && changeVolume"
    riverctl map $mode None XF86AudioLowerVolume  spawn "wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- && changeVolume"
    riverctl map $mode None XF86AudioMute         spawn "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && changeVolume"

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5% && changeBrightness'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%- && changeBrightness'
    riverctl map $mode Super L spawn "systemctl hibernate"
done

riverctl declare-mode float
riverctl map normal Alt F enter-mode float		# Super+R to enter float mode
 
### Floating window mappings but note that these also apply to tiled windows.
#
# Super {Arrows} to move views
  riverctl map float Super Left move left 100
  riverctl map float Super Down move down 100
  riverctl map float Super Up move up 100
  riverctl map float Super Right move right 100
 
# Alt+{arrows} to snap views to screen edges
  riverctl map float Alt Left snap left
  riverctl map float Alt Down snap down
  riverctl map float Alt Up snap up
  riverctl map float Alt Right snap right
 
# Shift+{arrows} to resize views
  riverctl map float Shift Left resize horizontal -100
  riverctl map float Shift Down resize vertical 100
  riverctl map float Shift Up resize vertical -100
  riverctl map float Shift Right resize horizontal 100
 
riverctl map float Alt F enter-mode normal	# Escape to exit float mode and return to normal mode

# Set background and border color
#riverctl background-color 0x002b36
#riverctl border-color-focused 0x93a1a1
#riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
#riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout wideriver 
riverctl spawn "way-displays > /tmp/way-displays.${XDG_VTNR}.${USER}.log 2>&1"
way-displays > /tmp/way-displays.${XDG_VTNR}.${USER}.log 2>&1 &
